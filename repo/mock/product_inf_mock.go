// Code generated by MockGen. DO NOT EDIT.
// Source: iiujapp.tech/susaday/repo (interfaces: ProductINF)

// Package mock_repo is a generated GoMock package.
package mock_repo

import (
	gomock "github.com/golang/mock/gomock"
	model "iiujapp.tech/susaday/model"
	reflect "reflect"
)

// MockProductINF is a mock of ProductINF interface
type MockProductINF struct {
	ctrl     *gomock.Controller
	recorder *MockProductINFMockRecorder
}

// MockProductINFMockRecorder is the mock recorder for MockProductINF
type MockProductINFMockRecorder struct {
	mock *MockProductINF
}

// NewMockProductINF creates a new mock instance
func NewMockProductINF(ctrl *gomock.Controller) *MockProductINF {
	mock := &MockProductINF{ctrl: ctrl}
	mock.recorder = &MockProductINFMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProductINF) EXPECT() *MockProductINFMockRecorder {
	return m.recorder
}

// FindProduct mocks base method
func (m *MockProductINF) FindProduct(arg0 string) (model.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindProduct", arg0)
	ret0, _ := ret[0].(model.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindProduct indicates an expected call of FindProduct
func (mr *MockProductINFMockRecorder) FindProduct(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindProduct", reflect.TypeOf((*MockProductINF)(nil).FindProduct), arg0)
}
